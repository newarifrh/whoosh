services:
  whoosh:
    container_name: whoosh
    build: .
    networks:
      - whoosh_network
    volumes:
      - .:/app
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - mongo1
  mongo1:
    container_name: mongo1
    image: "mongo:7"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27021:27017"
    volumes:
      - "mongo-1:/data/db"
      - "./mongo.key:/data/mongo.key"
    depends_on:
      - mongo2
      - mongo3
    networks:
      - whoosh_network
    restart: always
    command: "mongod --bind_ip_all --replSet dbrs --keyFile /data/mongo.key"
  mongo2:
    container_name: mongo2
    image: "mongo:7"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27022:27017"
    volumes:
      - "mongo-2:/data/db"
      - "./mongo.key:/data/mongo.key"
    networks:
      - whoosh_network
    restart: always
    command: "mongod --bind_ip_all --replSet dbrs --keyFile /data/mongo.key"
  mongo3:
    container_name: mongo3
    image: "mongo:7"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27023:27017"
    volumes:
      - "mongo-3:/data/db"
      - "./mongo.key:/data/mongo.key"
    networks:
      - whoosh_network
    restart: always
    command: "mongod --bind_ip_all --replSet dbrs --keyFile /data/mongo.key"
  mongo-setup:
    image: "mongo:7"
    container_name: mongo-setup
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - "./rs-init.sh:/scripts/rs-init.sh"
    restart: on-failure
    entrypoint: ["/bin/bash", "/scripts/rs-init.sh"]
    networks:
      - whoosh_network
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo1:27017,mongo2:27017,mongo3:27017/?replicaSet=dbrs"
    networks:
      - whoosh_network
    depends_on:
      - "mongo1"
networks:
  whoosh_network:
volumes:
  mongo-1:
  mongo-2:
  mongo-3:
